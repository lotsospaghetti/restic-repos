#!/bin/bash

export RESTIC_REPOS_DIR=/usr/local/etc
export REPO_DIRNAME=restic-repos.d

function helpdoc {
    echo ""
    cat "$RESTIC_REPOS_DIR/$REPO_DIRNAME/help.txt"
    echo ""
}

function repolist {
    list="$(ls -1d $RESTIC_REPOS_DIR/$REPO_DIRNAME/*/)"
    for dir in $list; do baselist+="$(basename $dir)\n"; done
    echo -e $baselist | sed -z '$ s/\n$//'
}

if [[ "$(whoami)" != "root" ]]; then echo "this command must be run as root." 1>&2; exit 0; fi

if [[ "$1" == "lsrepo"  ]] || [[ "$1" == "-l" ]]; then 
    repolist
    exit 0
elif [[ "$1" == "help" ]] || [[ "$1" == "-h" ]]; then
    helpdoc
    exit 0
fi

set -e

repodir=$RESTIC_REPOS_DIR/$REPO_DIRNAME/$1

if [[ "$2" == "init" && ! -d "$repodir" ]]; then
    mkdir -p "$repodir"
    cp -r "$RESTIC_REPOS_DIR/$REPO_DIRNAME/.default/." "$repodir/."
    chmod 700 "$repodir/env"
    ${EDITOR:-${VISUAL:-vi}} "$repodir/env"
fi

if [[ ! -d "$repodir" ]]; then echo "repo $1 not found." 1>&2; helpdoc; exit 0; fi
if [[ "$#" -lt 2 ]]; then echo "repo $1 found but no restic commands were given..." 1>&2; helpdoc; exit 0; fi

source "$repodir/env"
if [[ -z "$RESTIC_PASSWORD_FILE" ]]; then 
    export RESTIC_PASSWORD_FILE="$repodir/key"
    if [[ "$2" == "init" && ! -e "$RESTIC_PASSWORD_FILE" ]]; then
        gpg --armor --gen-random 1 64 | base64 >> "$repodir/key"
        chmod 600 "$repodir/key"
    fi
fi

if [[ "$2" == "autobackup" ]]; then
    if [[ -n $(pgrep "restic" | grep "restic backup") ]]; then echo "restic backup is already running..." 1>&2; exit 0; fi
    restic unlock
    restic backup --files-from-verbatim "$repodir/includes.conf" --exclude-file="$repodir/excludes.conf" --tag "autobackup"
    restic check --with-cache --read-data-subset=5G
    restic forget --host "$HOSTNAME" --tag "autobackup" --prune --keep-hourly 24 --keep-daily 30 --keep-monthly 6 --keep-weekly 4 --keep-yearly 3
elif [[ "$2" == "edit" ]]; then
    if [[ -w "$repodir/$3" ]]; then ${EDITOR:-${VISUAL:-vi}} "$repodir/$3"
    elif [[ -w "$repodir/$3.conf" ]]; then ${EDITOR:-${VISUAL:-vi}} "$repodir/$3.conf"
    else echo "Not a valid config..." 1>&2; exit 0; fi;
else
    if [[ "$2" == "backup" ]]; then 
        exec restic "${@:2}" --files-from-verbatim "$repodir/includes.conf" --exclude-file="$repodir/excludes.conf"
    elif [[ "$2" == "restore" ]]; then
        exec restic "${@:2}" --include-file="$repodir/includes.conf" --exclude-file="$repodir/excludes.conf"
    elif [[ "$2" == "rewrite" ]]; then
        exec restic "${@:2}" --exclude-file="$repodir/excludes.conf"
    else 
        exec restic "${@:2}"
    fi
fi
